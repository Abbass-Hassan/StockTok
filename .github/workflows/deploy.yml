name: Deploy Laravel Application
on:
  push:
    branches:
      - main
      - staging

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables
        id: set-env
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "ENV_TAG=production" >> $GITHUB_OUTPUT
            echo "SERVER_IP=35.181.171.137" >> $GITHUB_OUTPUT
          else
            echo "ENV_TAG=staging" >> $GITHUB_OUTPUT
            echo "SERVER_IP=13.37.224.245" >> $GITHUB_OUTPUT
          fi

          # Convert repository name to lowercase for GHCR
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_LOWER=${REPO_LOWER}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ steps.set-env.outputs.REPO_LOWER }}/stocktok_laravel:${{ steps.set-env.outputs.ENV_TAG }}
            ghcr.io/${{ steps.set-env.outputs.REPO_LOWER }}/stocktok_laravel:latest-${{ steps.set-env.outputs.ENV_TAG }}
          build-args: |
            ENV=${{ steps.set-env.outputs.ENV_TAG }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set environment variables
        id: set-env
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "ENV_TAG=production" >> $GITHUB_OUTPUT
            echo "SERVER_IP=35.181.171.137" >> $GITHUB_OUTPUT
          else
            echo "ENV_TAG=staging" >> $GITHUB_OUTPUT
            echo "SERVER_IP=13.37.224.245" >> $GITHUB_OUTPUT
          fi

          # Convert repository name to lowercase for GHCR
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_LOWER=${REPO_LOWER}" >> $GITHUB_OUTPUT

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ steps.set-env.outputs.SERVER_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker $USER
            fi

            # Install Docker Compose if not installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi

            # Create application directory
            mkdir -p ~/stocktok
            cd ~/stocktok

            # Download the docker-compose.yml file
            echo "Downloading docker-compose.yml..."
            if [[ "${{ steps.set-env.outputs.ENV_TAG }}" == "production" ]]; then
              curl -o docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.yml
            else
              curl -o docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/staging/docker-compose.yml
            fi

            # Create .env file for Docker Compose
            echo "Creating .env file..."
            echo "GITHUB_REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" > .env
            echo "IMAGE_TAG=${{ steps.set-env.outputs.ENV_TAG }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

            # Login to GitHub Container Registry
            echo "Logging in to GitHub Container Registry..."
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Pull and start containers
            echo "Pulling and starting containers..."
            docker-compose down || true
            docker-compose pull
            docker-compose up -d

            # Show container status
            docker-compose ps
