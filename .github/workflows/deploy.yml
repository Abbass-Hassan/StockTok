name: Deploy Laravel Application
on:
  push:
    branches:
      - main
      - staging

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set environment variables
        id: set-env
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            echo "ENV_TAG=production" >> $GITHUB_OUTPUT
          else
            echo "ENV_TAG=staging" >> $GITHUB_OUTPUT
          fi

          # Convert repository name to lowercase for GHCR
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_LOWER=${REPO_LOWER}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/${{ steps.set-env.outputs.REPO_LOWER }}/stocktok_laravel:${{ steps.set-env.outputs.ENV_TAG }}
            ghcr.io/${{ steps.set-env.outputs.REPO_LOWER }}/stocktok_laravel:latest-${{ steps.set-env.outputs.ENV_TAG }}
          build-args: |
            ENV=${{ steps.set-env.outputs.ENV_TAG }}

  deploy-production:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to production EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 35.181.171.137
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p ~/stocktok
            cd ~/stocktok

            # Create or update the .env file
            echo "GITHUB_REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" > .env
            echo "IMAGE_TAG=production" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_PORT=3306" >> .env

            # Download the latest docker-compose file
            curl -o docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.yml

            # Login to GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Remove old containers and images
            sudo docker-compose down
            sudo docker rmi ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/stocktok_laravel:production || true
            sudo docker rmi ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/stocktok_laravel:latest-production || true

            # Pull and start new containers
            sudo docker-compose pull
            sudo docker-compose up -d

  deploy-staging:
    needs: build-and-push
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to staging EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: 13.37.224.245
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p ~/stocktok
            cd ~/stocktok

            # Create or update the .env file
            echo "GITHUB_REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" > .env
            echo "IMAGE_TAG=staging" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_PORT=3307" >> .env  # Using different port for staging

            # Download the latest docker-compose file
            curl -o docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/staging/docker-compose.yml

            # Login to GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Remove old containers and images
            sudo docker-compose down
            sudo docker rmi ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/stocktok_laravel:staging || true
            sudo docker rmi ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/stocktok_laravel:latest-staging || true

            # Pull and start new containers
            sudo docker-compose pull
            sudo docker-compose up -d
